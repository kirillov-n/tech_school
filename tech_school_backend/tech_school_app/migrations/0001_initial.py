# Generated by Django 3.2 on 2021-05-14 20:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_lifecycle.mixins
import jsonfield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=4, verbose_name='Год')),
                ('relevance', models.CharField(choices=[('0', 'irrelevant'), ('1', 'relevant')], default='1', max_length=1, verbose_name='Релевантность')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата и время создания')),
            ],
            options={
                'verbose_name': 'Календарный план',
                'verbose_name_plural': 'Календарные планы',
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(verbose_name='Дата и время начала')),
                ('hours', models.IntegerField(verbose_name='Длительность')),
            ],
            options={
                'verbose_name': 'Занятие',
                'verbose_name_plural': 'Занятия',
            },
        ),
        migrations.CreateModel(
            name='ClassType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип занятия',
                'verbose_name_plural': 'Типы занятий',
            },
        ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название типа')),
            ],
            options={
                'verbose_name': 'Тип обучения',
                'verbose_name_plural': 'Типы обучения',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название подразделения')),
            ],
            options={
                'verbose_name': 'Подразделение',
                'verbose_name_plural': 'Подразделения',
            },
        ),
        migrations.CreateModel(
            name='DraftInTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Элемент учебного плана (Draft)',
                'verbose_name_plural': 'Элементы учебных планов (Draft)',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название группы')),
                ('start_theory', models.DateField(verbose_name='Начало теоретического обучения')),
                ('end_theory', models.DateField(verbose_name='Конец теоретического обучения')),
                ('start_practice', models.DateField(verbose_name='Начало практического обучения')),
                ('end_practice', models.DateField(verbose_name='Конец практического обучения')),
                ('status', models.CharField(choices=[('0', 'closed'), ('1', 'ongoing')], default='1', max_length=1, verbose_name='Статус группы')),
                ('edu_level', models.CharField(choices=[('0', 'Высшее'), ('1', 'СПО'), ('2', 'Среднее Общее')], default='2', max_length=1, verbose_name='Уровень образования')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='HoursNorm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Норма часов',
                'verbose_name_plural': 'Нормы часов',
            },
        ),
        migrations.CreateModel(
            name='InProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hours', models.IntegerField(verbose_name='Часы')),
            ],
            options={
                'verbose_name': 'Предмет в программе',
                'verbose_name_plural': 'Предметы в программах',
            },
        ),
        migrations.CreateModel(
            name='InSurvey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Вопрос в опросе',
                'verbose_name_plural': 'Вопросы в опросах',
            },
        ),
        migrations.CreateModel(
            name='InTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Элемент учебного плана',
                'verbose_name_plural': 'Элементы учебных планов',
            },
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=200, verbose_name='Фамилия')),
                ('name', models.CharField(max_length=200, verbose_name='Имя')),
                ('patronymic', models.CharField(max_length=200, verbose_name='Отчество')),
                ('phone', models.CharField(max_length=14, verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронная почта')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
            ],
            options={
                'verbose_name': 'Персональные данные человека',
                'verbose_name_plural': 'Персональные данные',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, verbose_name='Текст вопроса')),
                ('survey_type', models.CharField(choices=[('0', 'CLEI'), ('1', 'Big5'), ('2', '360')], max_length=1, verbose_name='Тип опроса')),
                ('options', jsonfield.fields.JSONField(default=dict, verbose_name='Варианты ответа')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
        ),
        migrations.CreateModel(
            name='ScolarshipNorm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lower', models.IntegerField()),
                ('higher', models.IntegerField()),
                ('amount', models.IntegerField()),
                ('valid_from', models.DateField(blank=True)),
                ('valid_to', models.DateField(blank=True)),
            ],
            options={
                'verbose_name': 'Норма стипендии',
                'verbose_name_plural': 'Нормы стипендий',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название предмета')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('who', models.CharField(choices=[('t', 'teacher'), ('s', 'student')], default='s', max_length=1, verbose_name='Кому предназначен')),
                ('is_active', models.CharField(choices=[('0', 'inactive'), ('1', 'active')], default='1', max_length=1, verbose_name='Активен ли')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.group', verbose_name='Группа')),
                ('questions', models.ManyToManyField(through='tech_school_app.InSurvey', to='tech_school_app.Question', verbose_name='Вопросы')),
            ],
            options={
                'verbose_name': 'Опрос',
                'verbose_name_plural': 'Опросы',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(choices=[('a', 'admin'), ('t', 'teacher')], default='t', max_length=1, verbose_name='Позиция')),
                ('is_active', models.CharField(choices=[('0', 'inactive'), ('1', 'active')], default='0', max_length=1, verbose_name='Активен ли пользователь')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Преподаватель',
                'verbose_name_plural': 'Преподаватели',
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education_level', models.CharField(choices=[('0', 'Высшее'), ('1', 'СПО'), ('2', 'Среднее Общее')], default='0', max_length=1, verbose_name='Уровень образования')),
                ('education_date', models.DateField(verbose_name='Дата получения образования')),
                ('last_training', models.DateField(verbose_name='Предыдущее обучение')),
                ('next_training', models.DateField(blank=True, verbose_name='Следующее обучение')),
                ('notes', models.CharField(blank=True, max_length=400, verbose_name='Заметки')),
                ('available', models.CharField(choices=[('0', 'unavailable'), ('1', 'available')], default='0', max_length=1, verbose_name='Доступен для преподавания')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.department', verbose_name='Подразделение сотрудника')),
                ('personal_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.personalinfo', verbose_name='Персональные данные сотрудника')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='WorkingDates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('if_working', models.CharField(choices=[('0', 'not working'), ('1', 'working')], max_length=1)),
            ],
            options={
                'verbose_name': 'Дата',
                'verbose_name_plural': 'Рабочие даты',
            },
        ),
        migrations.CreateModel(
            name='WorkerChanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=50)),
                ('new_value', models.CharField(max_length=400)),
                ('changed_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.worker')),
            ],
            options={
                'verbose_name': 'Изменение в Workers',
                'verbose_name_plural': 'Изменения в Workers',
            },
        ),
        migrations.CreateModel(
            name='TrainingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=4, verbose_name='Год')),
                ('status', models.CharField(choices=[('0', 'inactive'), ('1', 'active')], default='1', max_length=1, verbose_name='Статус')),
                ('relevance', models.CharField(choices=[('0', 'draft'), ('1', 'valid')], default='0', max_length=1, verbose_name='Релевантность')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата и время создания')),
                ('calendarplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.calendarplan', verbose_name='Календарный план')),
            ],
            options={
                'verbose_name': 'Учебный план',
                'verbose_name_plural': 'Учебные планы',
            },
        ),
        migrations.CreateModel(
            name='TrainingHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_type', models.CharField(choices=[('w', 'working'), ('p', 'personal')], default='w', max_length=1, verbose_name='Тип времени')),
                ('date', models.DateField(verbose_name='Дата')),
                ('hours', models.IntegerField(verbose_name='Часы')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата и время создания')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.group', verbose_name='Группа')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.subject', verbose_name='Предмет')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.teacher', verbose_name='Преподаватель')),
            ],
            options={
                'verbose_name': 'Учёт часов',
                'verbose_name_plural': 'Учёт часов',
            },
        ),
        migrations.CreateModel(
            name='TPDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('1', 'January'), ('2', 'February'), ('3', 'March'), ('4', 'April'), ('5', 'May'), ('6', 'June'), ('7', 'July'), ('8', 'August'), ('9', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], default='1', max_length=2, verbose_name='Месяц')),
                ('hours', models.IntegerField(verbose_name='Часы')),
                ('intp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.intp', verbose_name='Соответствующий элемент плана')),
            ],
            options={
                'verbose_name': 'Детали учебного плана',
                'verbose_name_plural': 'Детали учебных планов',
            },
        ),
        migrations.AddField(
            model_name='teacher',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.worker', verbose_name='Сотрудник'),
        ),
        migrations.CreateModel(
            name='SurveyCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='Генерируемый код опроса')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.survey', verbose_name='Опрос')),
            ],
            options={
                'verbose_name': 'Код опроса',
                'verbose_name_plural': 'Коды опросов',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personnel_num', models.CharField(max_length=6, verbose_name='Табельный номер')),
                ('education_status', models.CharField(choices=[('0', 'not going now'), ('1', 'ongoing')], default='1', max_length=1, verbose_name='Статус обучения')),
                ('from_staff', models.CharField(choices=[('0', 'not from stuff'), ('1', 'from stuff')], default='0', max_length=1, verbose_name='Из персонала')),
                ('personal_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.personalinfo', verbose_name='Персональные данные студента')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='SalaryNorm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_type', models.CharField(choices=[('w', 'working'), ('p', 'personal')], default='w', max_length=1)),
                ('edu_level', models.CharField(choices=[('0', 'Высшее'), ('1', 'СПО'), ('2', 'Среднее Общее')], default='2', max_length=1)),
                ('amount', models.IntegerField()),
                ('valid_from', models.DateField(blank=True)),
                ('valid_to', models.DateField(blank=True)),
                ('course_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.coursetype')),
            ],
            options={
                'verbose_name': 'Норма зарплаты',
                'verbose_name_plural': 'Нормы зарплат',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название программы')),
                ('course_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.coursetype', verbose_name='Тип обучения')),
                ('subjects', models.ManyToManyField(through='tech_school_app.InProgram', to='tech_school_app.Subject', verbose_name='Предметы')),
            ],
            options={
                'verbose_name': 'Программа',
                'verbose_name_plural': 'Программы',
            },
        ),
        migrations.CreateModel(
            name='PersonalInfoChanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=50)),
                ('new_value', models.CharField(max_length=400)),
                ('changed_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('personal_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.personalinfo')),
            ],
            options={
                'verbose_name': 'Изменение в PersonalInfo',
                'verbose_name_plural': 'Изменения в PersonalInfo',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=400, verbose_name='Текст уведомления')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Создано')),
                ('status', models.CharField(choices=[('0', 'new'), ('1', 'opened')], default='0', max_length=1, verbose_name='Статус')),
                ('importance', models.CharField(choices=[('0', 'low'), ('1', 'neutral'), ('2', 'high')], default='1', max_length=1, verbose_name='Степень важности')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.worker', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered_since', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Числится с')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.group', verbose_name='Группа')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Студент в группе',
                'verbose_name_plural': 'Студенты в группах',
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название лицензии')),
                ('upload_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата загрузки')),
                ('image', models.ImageField(upload_to='licences/', verbose_name='Изображение')),
                ('relevance', models.CharField(choices=[('0', 'irrelevant'), ('1', 'relevant')], default='1', max_length=1, verbose_name='Релевантность')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.worker', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Лицензия',
                'verbose_name_plural': 'Лицензии',
            },
        ),
        migrations.AddField(
            model_name='intp',
            name='trainingplan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.trainingplan', verbose_name='Учебный план'),
        ),
        migrations.AddField(
            model_name='insurvey',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.question', verbose_name='Вопрос'),
        ),
        migrations.AddField(
            model_name='insurvey',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.survey', verbose_name='Опрос'),
        ),
        migrations.AddField(
            model_name='inprogram',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.program', verbose_name='Программа'),
        ),
        migrations.AddField(
            model_name='inprogram',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.subject', verbose_name='Предмет'),
        ),
        migrations.CreateModel(
            name='InCP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('people_number', models.IntegerField(verbose_name='Число людей')),
                ('groups_number', models.IntegerField(verbose_name='Число групп')),
                ('calendarplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.calendarplan', verbose_name='Календарный план')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.program', verbose_name='Программа')),
            ],
            options={
                'verbose_name': 'Элемент календарного плана',
                'verbose_name_plural': 'Элементы календарных планов',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.program', verbose_name='Программа'),
        ),
        migrations.AddField(
            model_name='group',
            name='students',
            field=models.ManyToManyField(through='tech_school_app.Membership', to='tech_school_app.Student', verbose_name='Студенты'),
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_type', models.CharField(choices=[('g', 'grade'), ('a', 'attendance')], default='g', max_length=1, verbose_name='Оценка / Посещение')),
                ('grade', models.IntegerField(blank=True, verbose_name='Оценка')),
                ('attendance', models.CharField(blank=True, choices=[('0', 'absent'), ('1', 'present')], default='0', max_length=1, verbose_name='Посещение')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата и время создания')),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.class', verbose_name='Занятие')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.student', verbose_name='Студент')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор оценки')),
            ],
            options={
                'verbose_name': 'Оценка',
                'verbose_name_plural': 'Оценки',
            },
        ),
        migrations.CreateModel(
            name='DraftTPDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('1', 'January'), ('2', 'February'), ('3', 'March'), ('4', 'April'), ('5', 'May'), ('6', 'June'), ('7', 'July'), ('8', 'August'), ('9', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], default='1', max_length=2)),
                ('hours', models.IntegerField()),
                ('draft_intp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.draftintp')),
            ],
            options={
                'verbose_name': 'Детали учебного плана (Draft)',
                'verbose_name_plural': 'Детали учебных планов (Draft)',
            },
        ),
        migrations.CreateModel(
            name='DraftTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=4)),
                ('status', models.CharField(choices=[('0', 'inactive'), ('1', 'active')], default='1', max_length=1)),
                ('relevance', models.CharField(choices=[('0', 'draft'), ('1', 'valid')], default='0', max_length=1)),
                ('created_at', models.DateTimeField(null=True)),
                ('calendarplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.calendarplan')),
            ],
            options={
                'verbose_name': 'Учебный план (Draft)',
                'verbose_name_plural': 'Учебные планы (Draft)',
            },
        ),
        migrations.CreateModel(
            name='DraftTH',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_type', models.CharField(choices=[('w', 'working'), ('p', 'personal')], default='w', max_length=1)),
                ('date', models.DateField()),
                ('hours', models.IntegerField()),
                ('created_at', models.DateTimeField(null=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.group')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.teacher')),
            ],
            options={
                'verbose_name': 'Учёт часов (Draft)',
                'verbose_name_plural': 'Учёт часов (Draft)',
            },
        ),
        migrations.AddField(
            model_name='draftintp',
            name='draft_tp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.drafttp'),
        ),
        migrations.AddField(
            model_name='draftintp',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.group'),
        ),
        migrations.CreateModel(
            name='CPDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('1', 'January'), ('2', 'February'), ('3', 'March'), ('4', 'April'), ('5', 'May'), ('6', 'June'), ('7', 'July'), ('8', 'August'), ('9', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], default='1', max_length=2, verbose_name='Месяц')),
                ('groups_number', models.IntegerField(verbose_name='Число групп')),
                ('incp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.incp', verbose_name='Соответствующий элемент плана')),
            ],
            options={
                'verbose_name': 'Детали календарного плана',
                'verbose_name_plural': 'Детали календарных планов',
            },
        ),
        migrations.CreateModel(
            name='Comission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.class', verbose_name='Экзамен')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.worker', verbose_name='Сотрудник')),
            ],
            options={
                'verbose_name': 'Член комиссии',
                'verbose_name_plural': 'Члены комиссии',
            },
        ),
        migrations.AddField(
            model_name='class',
            name='class_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.classtype', verbose_name='Тип занятия'),
        ),
        migrations.AddField(
            model_name='class',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.group', verbose_name='Группа'),
        ),
        migrations.AddField(
            model_name='class',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.subject', verbose_name='Предмет'),
        ),
        migrations.AddField(
            model_name='class',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.teacher', verbose_name='Преподаватель'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers', jsonfield.fields.JSONField(default=dict, verbose_name='Ответы')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.student', verbose_name='Студент')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tech_school_app.survey', verbose_name='Опрос')),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
            },
        ),
    ]
